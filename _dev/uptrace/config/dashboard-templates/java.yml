schema: v1
id: uptrace.java.process_runtime_jvm
name: 'Java: JVM runtime'

table:
  metrics:
    - process.runtime.jvm.memory.usage as $mem_usage
    - process.runtime.jvm.memory.usage_after_last_gc as $usage_after_last_gc
    - process.runtime.jvm.gc.duration as $gc_dur
    - process.runtime.jvm.system.cpu.utilization as $cpu_util
  query:
    - $mem_usage
    - $usage_after_last_gc
    - avg($gc_dur)
    - per_min(count($gc_dur)) as num_gc
    - $cpu_util
    - group by host.name
  columns:
    cpu_util: { unit: utilization }

grid:
  - name: Number of executing threads
    metrics:
      - process.runtime.jvm.threads.count as $threads_count
    query:
      - $threads_count

  - name: Memory used by pool
    metrics:
      - process.runtime.jvm.memory.usage as $mem_usage
    query:
      - $mem_usage group by pool
    chart: stacked-bar

  - name: Memory used by type
    metrics:
      - process.runtime.jvm.memory.usage as $mem_usage
    query:
      - $mem_usage group by type
    chart: stacked-bar

  - name: Memory used after the last garbage collection
    metrics:
      - process.runtime.jvm.memory.usage_after_last_gc as $usage_after_last_gc
    query:
      - $usage_after_last_gc group by pool, type
    chart: stacked-bar

  - name: Recent cpu utilization for the process
    metrics:
      - process.runtime.jvm.cpu.utilization as $cpu_util
    query:
      - $cpu_util
    columns:
      cpu_util: { unit: utilization }

  - name: Recent CPU utilization for the whole system
    metrics:
      - process.runtime.jvm.system.cpu.utilization as $cpu_util
    query:
      - $cpu_util
    columns:
      cpu_util: { unit: utilization }

  - name: Average CPU load of the whole system for the last minute
    metrics:
      - process.runtime.jvm.system.cpu.load_1m as $cpu_load_1m
    query:
      - $cpu_load_1m

  - name: Memory commited
    metrics:
      - process.runtime.jvm.memory.committed as $mem_committed
    query:
      - $mem_committed group by pool, type
    chart: stacked-bar

  - name: Initial memory requested
    metrics:
      - process.runtime.jvm.memory.init as $mem_init
    query:
      - $mem_init group by pool, type
    chart: stacked-bar

  - name: Max obtainable memory
    metrics:
      - process.runtime.jvm.memory.limit as $mem_limit
    query:
      - $mem_limit group by pool, type
    chart: stacked-bar

  - name: Number of buffers
    metrics:
      - process.runtime.jvm.buffer.count as $buf_count
    query:
      - $buf_count group by pool
    chart: stacked-bar

  - name: Capacity of the buffers
    metrics:
      - process.runtime.jvm.buffer.limit as $buf_limit
    query:
      - $buf_limit group by pool
    chart: stacked-bar

  - name: Memory that the JVM is using
    metrics:
      - process.runtime.jvm.buffer.usage as $buf_usage
    query:
      - $buf_usage group by pool
    chart: stacked-bar

  - name: Total number of classes currently loaded
    metrics:
      - process.runtime.jvm.classes.current_loaded as $classes_loaded
    query:
      - $classes_loaded

  - name: Number of classes loaded
    metrics:
      - process.runtime.jvm.classes.loaded as $loaded
    query:
      - per_min($loaded)

  - name: Number of classes unloaded
    metrics:
      - process.runtime.jvm.classes.unloaded as $unloaded
    query:
      - per_min($unloaded)
